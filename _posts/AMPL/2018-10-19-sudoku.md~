---
layout: post
title: Desenvolver um solucionador de sudokus
author: José Paulo Mota
creation: 19-10-2018
update: 19-10-2018
email: pmota@fct.unl.pt
software: ampl
---

Nesta secção vamos aprender a formular um solucionador de sudokus, recorrendo a todas as ferramentas que já aprendemos de AMPL e mais algumas novas.


## Introdução

Sudoku é um jogo baseado na colocação lógica de números. O objetivo do jogo é a colocação de números de 1 a 9 em cada uma das células vazias numa grelha de 9 × 9, constituída por 3 × 3 sub-grelhas chamadas regiões. O quebra-cabeça contém algumas pistas iniciais, que são números inseridos em algumas células, de maneira a permitir uma indução ou dedução dos números em células que estejam vazias. Cada coluna, linha e região só pode ter um número de cada um dos 1 a 9.


## Resolução

Desde já começamos por criar os conjuntos de linhas e colunas do Sudoku:

```
set ROWS := 1..9 ;
set COLS := 1..9 ;
```

Em cada uma das células da grelha deverá colocar-se um número inteiro entre 1 e 9. Por uma questão de conveniência vamos exprimir o número \\(n_{i,j}\\) colocado na linha \\(i\\) e coluna \\(j\\) da seguinte forma:

\\[
n_{i,j} = 1 \times b_{i,j,1} + 2 \times b_{i,j,2} + ... + 9 \times b_{i,j,9} = \sum_{k=1}^9 k \times b_{i,j,k} 
\\]

em que cada uma das variáveis \\( b_{i,j,k} \in \\{0,1\\} \\)  é binária, isto é, que só pode assumir um de dois valores: zero ou um. Obviamente, na expressão que define \\( n_{i,j} \\) só um dos \\( b_{i,j,k} \\) é que pode ser igual a 1 sendo todos os outros iguais a 0, ou seja, as variáveis binárias \\( b_{i,j,k} \\) têm de satisfazer a seguinte condição:

\\[
\sum_{k=1}^9 b_{i,j,k} = 1, \forall_i \in ROWS, \forall_j \in COLS
\\]

O equivalente em AMPL será:

```
set DIGITS := 1..9 ;

var b { ROWS, COLS, DIGITS } binary ;

var n { r in ROWS , c in COLS } = sum { d in DIGITS } ( d * b[r,c,d] ) ;

s.t. unique_digits { r in ROWS , c in COLS } : sum { d in DIGITS } ( b[r,c,d] ) = 1 ;
```

Agora consideremos as restantes condições do Sudoku. Comecemos pelas mais fáceis. Uma linha do Sudoku tem de conter os números de 1 a 9 sem repetição. Por exemplo, suponha-se que a quarta linha contêm a seguinte sequência válida de números de 1 a 9: 3, 5, 1, 8, 6, 7, 9, 2, 4. Os valores de \\( b_{4,j,k} \\) com \\( j \in COLS, k \in DIGITS \\) será:

```
  k= 1 2 3 4 5 6 7 8 9
  
j=1: 0 0 1 0 0 0 0 0 0

j=2: 0 0 0 0 0 0 0 1 0

j=3: 1 0 0 0 0 0 0 0 0

j=4: 0 0 0 0 0 0 0 0 1

j=5: 0 1 0 0 0 0 0 0 0

j=6: 0 0 0 0 1 0 0 0 0

j=7: 0 0 0 0 0 1 0 0 0

j=8: 0 0 0 1 0 0 0 0 0

j=9: 0 0 0 0 0 0 1 0 0
```

Conclui-se que uma linha com sequência válida tem de satisfazer a seguinte condição:

\\[
\sum_{j \in COLS} d_{i,j,k} = 1, \forall_i \in LINES, \forall_k \in DIGITS
\\]

A restrição equivalente em AMPL será:

```
s.t. unique_rows { r in ROWS , d in DIGITS } : sum { c in COLS } ( b[r,c,d] ) = 1 ;
```

